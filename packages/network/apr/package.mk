# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
# Copyright (C) 2019 EricHao (funhome.tv)

PKG_NAME="apr"
PKG_VERSION="1.7.0"
PKG_SHA256="48e9dbf45ae3fdc7b491259ffb6ccf7d63049ffacbc1c0977cced095e4c2d5a2"
PKG_ARCH="any"
PKG_LICENSE="Apache LICENSE"
PKG_SITE="https://apr.apache.org"
PKG_URL="http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-$PKG_VERSION.tar.gz"
# PKG_MAINTAINER="John Doe" # Full name or forum/GitHub nickname, if you want to be identified as the addon maintainer
PKG_DEPENDS_TARGET="toolchain expat"
#PKG_SECTION="[location under packages, e.g. database]"
PKG_SECTION="web"
PKG_SHORTDESC="[the web server required parts]"
PKG_LONGDESC="The mission of the Apache Portable Runtime (APR) project is to create and maintain software libraries that provide a predictable and consistent interface to underlying platform-specific implementations. "
PKG_TOOLCHAIN="configure"

#ac_cv_sizeof_struct_iovec=1 \
	#apr_cv_tcp_nodelay_with_cork=yes \
	#following on the tab size is copied from entware/openwrt/feed/packages/libs/apr
	#apr_cv_mutex_robust_shared=yes \

PKG_CONFIGURE_OPTS_TARGET="ac_cv_file__dev_zero=yes \
			  ac_cv_func_setpgrp_void=yes \
			  apr_cv_tcp_nodelay_with_cork=yes \
			  ac_cv_sizeof_pid_t=4 \
			  ac_cv_sizeof_struct_iovec=8 \
	ac_cv_struct_rlimit=yes \
	ac_cv_func_sem_open=yes \
	apr_cv_sock_cloexec=yes \
	apr_cv_process_shared_works=yes \
	apr_cv_mutex_recursive=yes \
	apr_cv_epoll_create1=yes \
	apr_cv_epoll=yes \
	apr_cv_dup3=yes \
	apr_lock_method=USE_SYSVSEM_SERIALIZE \
	ac_cv_func_pthread_mutexattr_setpshared=yes \
	apr_cv_mutex_robust_shared=yes \
	apr_cv_accept4=yes "




pre_configure_target() {


# copy from samba's pre_configure_target 
# in order to remove the duplicate of struct iovec
  if [ "$TARGET_ARCH" = "arm" -o "${TARGET_ARCH}" = "x86_64" ]; then
    export CFLAGS+=" -DAPR_IOVEC_DEFINED"
  fi

#haoyq we remove the famous cross compiling apr problem of sizeof_pid_t=8 :) , it should be 4 on 32bit-arm
#we install qemu-static-arm so can run the generated program to decide sizeof_pid
######### the contents of configure in line 24472-24474
#  if test "$cross_compiling" = yes; then :
#  ac_cv_sizeof_pid_t=8
#else
#
#########
#sed -i.hfx "24472,24474s/^.*$//g" ../configure
# we use add ac_cv_sizeof_pid_t=4 in PKG_CONFIGURE_OPTS_TARGET to avoid fix configure file 

}

pre_make_target() {

echo "should configure OK!!!!!!!!!!!!! ready for make !!!!!!!!!!!!!!!!!!!!!!!"
# for the apr_escape_test_char.h
# because it's crosscompile , cannot use generate a file of include on make fly...
# 1 we provide the result
# 2 we remove the section of the Makefile as the following :
# include/private/apr_escape_test_char.h: tools/gen_test_char
#	$(APR_MKDIR) include/private
#	tools/gen_test_char > $@
#
#
#
#if [ -d "/xtr/ubuntu/LbrELEC/LibreELEC.tv/build.LibreELEC-RPi2.arm-9.0-devel/apr-1.7.0/.armv7ve-libreelec-linux-gnueabi/" ]  ; then
#   echo "directory exist . Check the following directory"
#   echo "$PWD"
#   pwd
#   ls -lR /xtr/ubuntu/LbrELEC/LibreELEC.tv/build.LibreELEC-RPi2.arm-9.0-devel/apr-1.7.0/.armv7ve-libreelec-linux-gnueabi/
#else
#	echo "not exist  /xtr/ubuntu/LbrELEC/LibreELEC.tv/build.LibreELEC-RPi2.arm-9.0-devel/apr-1.7.0/.armv7ve-libreelec-linux-gnueabi/"
#fi

sed -i 's"include/private/apr_escape_test_char.h: tools/gen_test_char""' Makefile
sed -i 's"$(APR_MKDIR) include/private""' Makefile
sed -i 's"tools/gen_test_char > $@""' Makefile

mkdir -p include/private
#  mkdr -p include/private
#  echo >> include/private/apr_escape_test_char.h <<EOF
#
echo " before generate the file"
#ls -l /xtr/ubuntu/LbrELEC/LibreELEC.tv/build.LibreELEC-RPi2.arm-9.0-devel/apr-1.7.0/.armv7ve-libreelec-linux-gnueabi/include/private/apr_escape_test_char.h

cat>include/private/apr_escape_test_char.h<<EOF

 /* this file is automatically generated by gen_test_char, do not edit. "make include/private/apr_escape_test_char.h" to regenerate. */
 #define T_ESCAPE_SHELL_CMD     (1)
 #define T_ESCAPE_PATH_SEGMENT  (2)
 #define T_OS_ESCAPE_PATH       (4)
     #define T_ESCAPE_ECHO          (8)
     #define T_ESCAPE_URLENCODED    (16)
     #define T_ESCAPE_XML           (32)
     #define T_ESCAPE_LDAP_DN       (64)
     #define T_ESCAPE_LDAP_FILTER   (128)
    
    static const unsigned char test_char_table[256] = {
        224,222,222,222,222,222,222,222,222,222,223,222,222,222,222,222,222,222,222,222,
        222,222,222,222,222,222,222,222,222,222,222,222,6,16,127,22,17,22,49,17,
        145,145,129,80,80,0,0,18,0,0,0,0,0,0,0,0,0,0,16,87,
        119,16,119,23,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,23,223,23,23,0,23,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,23,23,23,17,222,222,222,222,222,222,222,222,222,222,222,222,222,
        222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,
        222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,
        222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,
        222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,
        222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,
        222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222 
    };

EOF

echo "!!!!!!!!!!!!!!!!!!!!!!!!!after generate the file "

ls -l include/private/apr_escape_test_char.h



}

post_makeinstall_target(){

### fix the following directory for php install..... because php use apxs to install the module and apxs use apr

#ubuntu@fun-robin:~/LbrELEC/LibreELEC.tv/build.LibreELEC-RPi2.arm-9.0-devel/apr-1.7.0/.install_pkg/usr$ grep build-1 build-1/*
#build-1/apr_rules.mk:apr_builddir=/usr/build-1
#build-1/apr_rules.mk:apr_builders=/usr/build-1
#build-1/apr_rules.mk:top_builddir=/usr/build-1
APR_DIR=$(get_build_dir apr)/.install_pkg
#sed -i "s|apr_builddir=|apr_builddir=$SYSROOT_PREFIX|" $SYSROOT_PREFIX/usr/build-1/apr_rules.mk
#sed -i "s|apr_builders=|apr_builders=$SYSROOT_PREFIX|" $SYSROOT_PREFIX/usr/build-1/apr_rules.mk
#sed -i "s|top_builddir=|top_builddir=$SYSROOT_PREFIX|" $SYSROOT_PREFIX/usr/build-1/apr_rules.mk
#haoyq we changed to $INSTALL from $SYSROOT_PREFIX 20200323
sed -i "s|apr_builddir=|apr_builddir=${INSTALL}|" $SYSROOT_PREFIX/usr/build-1/apr_rules.mk
sed -i "s|apr_builders=|apr_builders=${INSTALL}|" $SYSROOT_PREFIX/usr/build-1/apr_rules.mk
sed -i "s|top_builddir=|top_builddir=${INSTALL}|" $SYSROOT_PREFIX/usr/build-1/apr_rules.mk

# for funhome.tv.4 modified APR_DIR to INSTALL , because the struct changed. we haoyq 20200322
#sed -i "s|apr_builddir=|apr_builddir=$SYSROOT_PREFIX|" ${INSTALL}/usr/build-1/apr_rules.mk
#sed -i "s|apr_builders=|apr_builders=$SYSROOT_PREFIX|" ${INSTALL}/usr/build-1/apr_rules.mk
#sed -i "s|top_builddir=|top_builddir=$SYSROOT_PREFIX|" ${INSTALL}/usr/build-1/apr_rules.mk
# change SYSROOT_PREFIX to INSTALL
sed -i "s|apr_builddir=|apr_builddir=${INSTALL}|" ${INSTALL}/usr/build-1/apr_rules.mk
sed -i "s|apr_builders=|apr_builders=${INSTALL}|" ${INSTALL}/usr/build-1/apr_rules.mk
sed -i "s|top_builddir=|top_builddir=${INSTALL}|" ${INSTALL}/usr/build-1/apr_rules.mk


# fix "apr-1-config --apr-tool" return /usr/build-1 for php install 
# to $SYSROOT_PREFIX/usr 

#origin : sed -i "s|prefix=\"/usr\"|prefix=\"$SYSROOT_PREFIX/usr\"|" $SYSROOT_PREFIX/usr/bin/apr-1-config
#change to INSTALL we haoyq 20200322
sed -i "s|prefix=\"/usr\"|prefix=\"${INSTALL}/usr\"|" $SYSROOT_PREFIX/usr/bin/apr-1-config
#new added
sed -i "s|prefix=\"/usr\"|prefix=\"${INSTALL}/usr\"|" ${INSTALL}/usr/bin/apr-1-config

echo "SYSROOT_PREFIX is =${SYSROOT_PREFIX}= , INSTALL is =${INSTALL}=."
}



#PKG_CMAKE_OPTS_TARGET="-DWITH_EXAMPLE_PATH=/storage/.example

#pre_configure_target() {
#  do something, or drop it
#}
# see https://github.com/LibreELEC/LibreELEC.tv/blob/master/packages/readme.md for more
# take a look to other packages, for inspiration
